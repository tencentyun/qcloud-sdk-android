/*
 * Copyright (c) 2010-2020 Tencent Cloud. All rights reserved.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

apply plugin: 'jacoco'

jacoco {
//    toolVersion = "0.7.7.201606060606" //指定jacoco的版本
    reportsDir = file("$buildDir/reports") //指定jacoco生成报告的文件夹
}

task jacocoCreateNormalDebugCoverageReport(type: JacocoReport, dependsOn: 'connectedNormalDebugAndroidTest') {
//跑过单测后 可以直接执行，不依赖connectedNormalDebugAndroidTest 否则会又跑一次
//task jacocoCreateNormalDebugCoverageReport(type: JacocoReport) {
    group = "verification"
    reports {
        html.enabled = true //开启html报告
        xml.enabled = true //开启xml报告
    }

    def classTree = fileTree(dir: "${buildDir}/intermediates/javac/normalDebug/compileNormalDebugJavaWithJavac/classes",
            excludes: [
                    //灯塔
                    'com/tencent/beacon/**',
//                  'com/tencent/cos/xml/BeaconService.class',
                    //废弃
                    'com/tencent/cos/xml/transfer/UploadService*',
                    'com/tencent/cos/xml/transfer/Downloader*',
                    'com/tencent/cos/xml/transfer/CopyObjectService*',
                    // 系统临时生成
                    '**/*BuildConfig.class',
                    '**/*$$XmlAdapter.class',// 排除xml序列化中间生成类
                    '**/*XmlAdapter*.class',// 排除XmlAdapter中的匿名类ChildElementBinder

                    'com/tencent/cos/xml/crypto/**',
                    'com/tencent/cos/xml/model/tag/eventstreaming/**',
                    'com/tencent/cos/xml/s3',
                    'com/tencent/cos/xml/utils',
            ])
    classDirectories.setFrom(files([classTree]))

    def executionTree = fileTree(dir: "${buildDir}/outputs/code_coverage/normalDebugAndroidTest/connected/")
    executionData.setFrom(files(executionTree))
}